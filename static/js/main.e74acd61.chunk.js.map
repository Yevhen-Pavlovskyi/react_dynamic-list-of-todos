{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoSelected","onSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","status","onChangeQuery","onChangeStatus","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","currentUser","setCurrentUser","useEffect","userId","href","email","name","App","selectedTodos","setSelectedTodos","isLoading","setIsLoading","setTodoSelected","setQuery","setStatus","initialFilter","filter","filteredTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e74acd61.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  todoSelected: Todo | null,\n  onSelectedTodo: (todoSelected: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoSelected,\n  onSelectedTodo,\n}) => (\n\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={\n            classNames({ 'has-background-info-light': todoSelected })\n          }\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger')}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={\n                  classNames(todoSelected?.id === todo.id\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye')\n                }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  status: string,\n  onChangeQuery: (query: string) => void,\n  onChangeStatus: (status: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  status,\n  onChangeQuery,\n  onChangeStatus,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={status}\n          onChange={(event) => onChangeStatus(event.target.value)}\n          data-cy=\"statusSelect\"\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onChangeQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChangeQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todoSelected: Todo,\n  onSelectedTodo: (todoSelected: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoSelected,\n  onSelectedTodo,\n}) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todoSelected.userId)\n      .then(setCurrentUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          {}\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoSelected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoSelected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todoSelected.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [selectedTodos, setSelectedTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [todoSelected, setTodoSelected] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setSelectedTodos(todos);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const initialFilter = () => {\n    switch (status) {\n      case 'active':\n        return selectedTodos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return selectedTodos.filter(todo => todo.completed);\n\n      case 'all':\n      default:\n        return selectedTodos;\n    }\n  };\n\n  const todoFilter = () => {\n    if (query === '') {\n      return initialFilter();\n    }\n\n    return initialFilter()\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  const filteredTodos = todoFilter();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                status={status}\n                onChangeQuery={setQuery}\n                onChangeStatus={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    todoSelected={todoSelected}\n                    onSelectedTodo={setTodoSelected}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoSelected && (\n        <TodoModal\n          todoSelected={todoSelected}\n          onSelectedTodo={setTodoSelected}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}